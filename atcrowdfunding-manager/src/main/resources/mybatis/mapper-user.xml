<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.atcrowdfunding.dao.UserDao" >

    <select id="queryPermissionsByUser" resultType="com.atguigu.atcrowdfunding.common.bean.Permission">
        select
            *
        from t_permission
        where id in (
            select
                permissionid
            from t_role_permission
            where roleid in (
                select
                    roleid
                from t_user_role
                where userid = #{id}
            )
        )
    </select>

    <select id="queryPageUsers" resultType="com.atguigu.atcrowdfunding.common.bean.User">
        select 
            *
        from t_user
        <where>
            <if test="queryContent != null">
              and loginacct like concat('%', #{queryContent}, '%')
            </if>
        </where>
        order by createtime desc
        limit #{start}, #{size}
        
    </select>
    
    <select id="queryPageCount" resultType="int">
        select
            count(*)
        from t_user
        <where>
            <if test="queryContent != null">
              and loginacct like concat('%', #{queryContent}, '%')
            </if>
        </where>
    </select>
    
    <insert id="insertUser">
        insert into t_user (
            loginacct, username, userpswd, email, createtime
        ) values (
            #{loginacct}, #{username}, #{userpswd}, #{email}, #{createtime}
        )
    </insert>
    
    <insert id="insertUserRoles">
        insert into t_user_role (
            userid, roleid
        ) values
        <foreach collection="roleids" item="roleid" separator="," >
        ( #{userid}, #{roleid} )
        </foreach>
    </insert>
    
    <update id="updateUser">
        update t_user
        set
            loginacct = #{loginacct},
            username = #{username},
            email = #{email}
        where id = #{id}
    </update>
    
    <delete id="deleteUserById">
        delete from t_user where id = #{id}
    </delete>
    
    <delete id="deleteUsers">
        delete from t_user where id in
        <foreach collection="users" item="user" separator="," open="(" close=")">
        #{user.id}
        </foreach>
    </delete>
    
    <delete id="deleteUserRoles">
        delete from t_user_role where userid = #{userid} and roleid in
        <foreach collection="roleids" item="roleid" separator="," open="(" close=")">
        #{roleid}
        </foreach>
    </delete>

</mapper>